sudo: required
dist: trusty
language: cpp
compiler: gcc

addons:
  apt:
    packages:
    - openmpi-bin
    - libopenmpi-dev
    - libfftw3-dev
    - libnetcdf-dev
    - libhdf5-serial-dev
    - netcdf-bin
    - hdf5-tools

matrix:
  include:
  - env: CONFIGURE_OPTIONS=''
  - addons:
      apt:
        packages:
        - openmpi-bin
        - libopenmpi-dev
        - libfftw3-dev
        - libnetcdf-dev
        - libhdf5-serial-dev
        - netcdf-bin
        - hdf5-tools
    env: CONFIGURE_OPTIONS='--enable-code-coverage --enable-debug --enable-checks=3'
    script:
      - ./configure $CONFIGURE_OPTIONS
      - build-wrapper-linux-x86-64 --out-dir bw-output make -j 2 -k
      - build-wrapper-linux-x86-64 --out-dir bw-output make -j 2 -k check-unit-tests
    after_success:
      - bash <(curl -s https://codecov.io/bash)
      - ./get_code_cov.sh > /dev/null

before_install:
  ##################################################
  # Job specific setup
  ##################################################
  # The following eval is the way to force CC/CXX to desired values as travis forces values
  # for these in the pre-before_install stage, see https://docs.travis-ci.com/user/languages/cpp/#C11-C%2B%2B11-(and-Beyond)-and-Toolchain-Versioning
  - eval "${MATRIX_EVAL}"
  - echo "${CC} $(${CC} --version)"
  ##################################################
  # Install Conda for python 3
  ##################################################
  - source .install_miniconda_for_travis.sh
  - pip install --user cpp-coveralls

  ##################################################

  # Make sure to use the system NetCDF/HDF5 libraries, or we end up
  # using the Conda libraries, which causes no end of headaches
  - export CONFIGURE_OPTIONS="--with-netcdf=/usr/bin/nc-config --with-hdf5=/usr/bin/h5cc $CONFIGURE_OPTIONS"

script:
  # Configure, compile and run test_suite
  - "./.travis_script.sh"

notifications:
  # Send a notification to the BOUT++ Slack team
  slack:
    secure: keU2ApI8C1M5q1700iNWmhzAQN5iJCciuP6V1lAjVBE8C2C/8mnYK3Pe83wok97buvvfVs5Qjq1+MSYSTCEw+dEye7p+1aBH7qg8C2Jyw+ugFe+6vmijag3v8DqkkzUGyF4X7+ei7YfV4G7u7YAlq/BqzD9e0SA7aASZJ3CF42f4lHKwTe0mnJfqOb8MwCBbSytzdj/iQH/O/pch03CjVObv2A88gaC5YMwYpeTAMMNGZThHsJHcVFCAz4MbvOApKSnykbRbE4AooF6lhUnAg/V40+ews5Q0NhYSLoOcQohLljLTMKAL2oRS34WdunnAEdIighLztFBNI/CKO8uaFBsWZcT2E4qRrajYTnuhCop5fUtk2lsrwUV36WFKLswa74KaSjXgpjvrV1MIidkRztPhYwcJdk9yvEroZ67C4GPBLZ6jZF/nUU9l2toPNkzGkxhDB9r9MIU2l0PJ2d3wRCcZ59jZ/Gr1Bminsyr20AU1JO5tsiO+6UI+7hxXQXtz/1knlmiZ/pXj/3Sp8+KQ/Z0MUeayC0CROFoZt/HekA6z34YcmeN/nMcXCnO7HTZ+bw7LasaIsrHbQ3PYPn8Be2f1hj4sPBnPpruN5FFYYc29c/ek8FET9LLD8a3v1V8P2udy/y5RnDqFskx+OfqKL8tSJk/zSbK/JPCTnx1rfsU=
